# -- 匹配的规则
# 字符	    功能
# *	    匹配前一个字符出现0次或者无限次，即可有可无
# +	    匹配前一个字符出现1次或者无限次，即至少有1次
# ?	    匹配前一个字符出现1次或者0次，即要么有1次，要么没有
# {m}	    匹配前一个字符出现m次    \d{3}
# {m,n}	匹配前一个字符出现从m到n次  \d{1,3}  1 12 123 1234

# 使用  类型{}
# 用来表示一个字符出现多少次
# 匹配速度与激情1,速度与激情12
import re

# print(re.match("速度与激情\d\d\d", "速度与激情124").group())
# print(re.match("速度与激情\d{1,3}", "速度与激情124").group())
# print(re.match("速度与激情\d{1,3}", "速度与激情1").group())
# print(re.match("速度与激情\d{1,3}", "速度与激情123356").group())



# 匹配手机号11位
# print(re.match("\d{11}", "17654321908").group())



# 判断电话号码是否021 - 开头的后面8位电话号码
# 例: 021 - 12345678
# 判断电话号
# print(re.match("021-\d{8}", "021-12345678").group())
# print(re.match("021-\d{7,8}", "021-1234567").group())
# print(re.match("021-\d{7,8}", "021-12345678").group())



# 使用?
# 用来表示有一个字符或者没有字符
# 用户输入的电话号码有时有'-'有时没有
# 例:02112345678 或者  021-12345678
# print(re.match("021-?\d{7,8}", "021-12345678").group())
# print(re.match("021-?\d{7,8}", "02112345678").group())




# 有些地方是三位电话号码开头,有些是四位电话号码开头
# print(re.match("\d{3,4}-\d{7,8}", "021-12345678").group())
# print(re.match("\d{3,4}-?\d{7,8}", "021-12345678").group())
# print(re.match("\d{3,4}-?\d{7,8}", "02112345678").group())


# *
# 表示0或者无限次
# 匹配一段文字或者没有输入文字

str = """今天天气不错
我们可以出去运动一下!

"""

print(re.match(".*", str).group())
print(re.match(".*", str, re.S).group())  # 扩展一下re.S这个可以让我们的.匹配所有

# +
# 表示至少一次,不能为空

print(re.match(".+", " ").group())
